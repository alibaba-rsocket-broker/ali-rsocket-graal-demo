[
{
  "name":"boolean[]"
},
{
  "name":"ch.qos.logback.classic.LoggerContext"
},
{
  "name":"ch.qos.logback.classic.pattern.DateConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LevelConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LineSeparatorConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LoggerConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.MessageConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.ThreadConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.core.Appender"
},
{
  "name":"com.alibaba.graal.AliRSocketGraalApp",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.alibaba.graal.PortalController",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.alibaba.rsocket.Initializable",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"com.alibaba.rsocket.RSocketRequesterSupport",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"com.alibaba.rsocket.RSocketService",
  "allDeclaredMethods":true
},
{
  "name":"com.alibaba.rsocket.encoding.impl.ObjectEncodingHandlerAvorImpl$$Lambda$535/0x0000000840422840"
},
{
  "name":"com.alibaba.rsocket.encoding.impl.ObjectEncodingHandlerAvorImpl$$Lambda$536/0x0000000840422c40"
},
{
  "name":"com.alibaba.rsocket.encoding.impl.ObjectEncodingHandlerProtobufImpl$$Lambda$526/0x0000000840425440"
},
{
  "name":"com.alibaba.rsocket.events.AppStatusEvent",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.alibaba.rsocket.events.CloudEventSupport",
  "allDeclaredMethods":true
},
{
  "name":"com.alibaba.rsocket.health.RSocketServiceHealth",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"com.alibaba.rsocket.listen.RSocketResponderHandlerFactory",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"com.alibaba.rsocket.metadata.AppMetadata",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.alibaba.rsocket.metadata.MetadataAware",
  "allDeclaredMethods":true
},
{
  "name":"com.alibaba.rsocket.observability.MetricsService",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"com.alibaba.rsocket.rpc.LocalReactiveServiceCaller",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"com.alibaba.rsocket.rpc.LocalReactiveServiceCallerImpl",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"addProvider","parameterTypes":["java.lang.String","java.lang.String","java.lang.String","java.lang.Class","java.lang.Object"] },
    {"name":"contains","parameterTypes":["java.lang.Integer"] },
    {"name":"contains","parameterTypes":["java.lang.String"] },
    {"name":"contains","parameterTypes":["java.lang.String","java.lang.String"] },
    {"name":"containsHandler","parameterTypes":["java.lang.Integer"] },
    {"name":"createReactiveServiceInterface","parameterTypes":["java.lang.String","java.lang.String","java.lang.String","java.lang.Class"] },
    {"name":"findAllServices","parameterTypes":[] },
    {"name":"findServiceByFullName","parameterTypes":["java.lang.String"] },
    {"name":"getInvokeMethod","parameterTypes":["java.lang.Integer"] },
    {"name":"getInvokeMethod","parameterTypes":["java.lang.String","java.lang.String"] },
    {"name":"removeProvider","parameterTypes":["java.lang.String","java.lang.String","java.lang.String","java.lang.Class"] }
  ]
},
{
  "name":"com.alibaba.rsocket.rpc.ReactiveServiceDiscovery",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"com.alibaba.rsocket.upstream.UpstreamClusterChangedEventProcessor",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"init","parameterTypes":[] }]
},
{
  "name":"com.alibaba.rsocket.upstream.UpstreamManager",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"com.alibaba.rsocket.upstream.UpstreamManagerImpl",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"com.alibaba.spring.boot.rsocket.RSocketAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.alibaba.spring.boot.rsocket.RSocketAutoConfiguration$$EnhancerBySpringCGLIB$$b4a4724b",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[
    {"name":"metricsService","parameterTypes":["io.micrometer.prometheus.PrometheusMeterRegistry"] },
    {"name":"rSocketServiceAnnotationProcessor","parameterTypes":["com.alibaba.spring.boot.rsocket.RSocketProperties"] },
    {"name":"reactiveCloudEventProcessor","parameterTypes":[] },
    {"name":"rsocketBrokerHealth","parameterTypes":["com.alibaba.spring.boot.rsocket.RSocketEndpoint","com.alibaba.rsocket.upstream.UpstreamManager","java.lang.String"] },
    {"name":"rsocketEndpoint","parameterTypes":["com.alibaba.rsocket.upstream.UpstreamManager","com.alibaba.rsocket.RSocketRequesterSupport"] },
    {"name":"rsocketRequesterSupport","parameterTypes":["com.alibaba.spring.boot.rsocket.RSocketProperties","org.springframework.core.env.Environment","io.rsocket.SocketAcceptor","org.springframework.beans.factory.ObjectProvider"] },
    {"name":"rsocketResponderHandlerFactory","parameterTypes":["com.alibaba.rsocket.rpc.LocalReactiveServiceCaller","reactor.extra.processor.TopicProcessor"] },
    {"name":"rsocketResponderHandlerFactoryWithZipkin","parameterTypes":["com.alibaba.rsocket.rpc.LocalReactiveServiceCaller","reactor.extra.processor.TopicProcessor"] },
    {"name":"rsocketServiceHealth","parameterTypes":[] },
    {"name":"rsocketServicesPublishHook","parameterTypes":[] },
    {"name":"rsocketUpstreamManager","parameterTypes":["com.alibaba.rsocket.RSocketRequesterSupport"] },
    {"name":"upstreamClusterChangedEventProcessor","parameterTypes":["com.alibaba.rsocket.upstream.UpstreamManager","reactor.extra.processor.TopicProcessor"] },
    {"name":"webServerInitializedEventApplicationListener","parameterTypes":[] }
  ]
},
{
  "name":"com.alibaba.spring.boot.rsocket.RSocketAutoConfiguration$$EnhancerBySpringCGLIB$$b4a4724b$$FastClassBySpringCGLIB$$1c56d9a2",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"com.alibaba.spring.boot.rsocket.RSocketAutoConfiguration$$FastClassBySpringCGLIB$$1b463f05",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"com.alibaba.spring.boot.rsocket.RSocketAutoConfiguration$$Lambda$441/0x0000000840331040",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"accept","parameterTypes":["io.rsocket.ConnectionSetupPayload","io.rsocket.RSocket"] }]
},
{
  "name":"com.alibaba.spring.boot.rsocket.RSocketAutoConfiguration$$Lambda$846/0x000000084054c040",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }]
},
{
  "name":"com.alibaba.spring.boot.rsocket.RSocketBrokerHealthIndicator",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"health","parameterTypes":[] }]
},
{
  "name":"com.alibaba.spring.boot.rsocket.RSocketEndpoint",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"com.alibaba.spring.boot.rsocket.RSocketProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.alibaba.spring.boot.rsocket.RSocketRequesterSupportImpl",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"exposedServices","parameterTypes":[] },
    {"name":"originUri","parameterTypes":[] },
    {"name":"requestInterceptors","parameterTypes":[] },
    {"name":"responderInterceptors","parameterTypes":[] },
    {"name":"servicesExposedEvent","parameterTypes":[] },
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] },
    {"name":"setupPayload","parameterTypes":[] },
    {"name":"socketAcceptor","parameterTypes":[] },
    {"name":"subscribedServices","parameterTypes":[] }
  ]
},
{
  "name":"com.alibaba.spring.boot.rsocket.health.RSocketServiceHealthImpl",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"check","parameterTypes":["java.lang.String"] }]
},
{
  "name":"com.alibaba.spring.boot.rsocket.observability.MetricsServicePrometheusImpl",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"scrape","parameterTypes":[] }]
},
{
  "name":"com.alibaba.spring.boot.rsocket.responder.RSocketServicesPublishHook",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }]
},
{
  "name":"com.alibaba.spring.boot.rsocket.responder.invocation.RSocketServiceAnnotationProcessor",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] },
    {"name":"postProcessBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }
  ]
},
{
  "name":"com.alibaba.user.User",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"com.alibaba.user.UserService",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"com.fasterxml.jackson.core.JsonGenerator"
},
{
  "name":"com.fasterxml.jackson.core.ObjectCodec",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"com.fasterxml.jackson.core.TreeCodec",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"com.fasterxml.jackson.core.Versioned",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"com.fasterxml.jackson.databind.Module",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"getDependencies","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.databind.ObjectMapper",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"createArrayNode","parameterTypes":[] },
    {"name":"createObjectNode","parameterTypes":[] },
    {"name":"getFactory","parameterTypes":[] },
    {"name":"getJsonFactory","parameterTypes":[] },
    {"name":"missingNode","parameterTypes":[] },
    {"name":"nullNode","parameterTypes":[] },
    {"name":"readTree","parameterTypes":["com.fasterxml.jackson.core.JsonParser"] },
    {"name":"readValue","parameterTypes":["com.fasterxml.jackson.core.JsonParser","com.fasterxml.jackson.core.type.ResolvedType"] },
    {"name":"readValue","parameterTypes":["com.fasterxml.jackson.core.JsonParser","com.fasterxml.jackson.core.type.TypeReference"] },
    {"name":"readValue","parameterTypes":["com.fasterxml.jackson.core.JsonParser","java.lang.Class"] },
    {"name":"readValues","parameterTypes":["com.fasterxml.jackson.core.JsonParser","com.fasterxml.jackson.core.type.ResolvedType"] },
    {"name":"readValues","parameterTypes":["com.fasterxml.jackson.core.JsonParser","com.fasterxml.jackson.core.type.TypeReference"] },
    {"name":"readValues","parameterTypes":["com.fasterxml.jackson.core.JsonParser","java.lang.Class"] },
    {"name":"treeAsTokens","parameterTypes":["com.fasterxml.jackson.core.TreeNode"] },
    {"name":"treeToValue","parameterTypes":["com.fasterxml.jackson.core.TreeNode","java.lang.Class"] },
    {"name":"version","parameterTypes":[] },
    {"name":"writeTree","parameterTypes":["com.fasterxml.jackson.core.JsonGenerator","com.fasterxml.jackson.core.TreeNode"] },
    {"name":"writeValue","parameterTypes":["com.fasterxml.jackson.core.JsonGenerator","java.lang.Object"] }
  ]
},
{
  "name":"com.fasterxml.jackson.databind.deser.Deserializers[]"
},
{
  "name":"com.fasterxml.jackson.databind.deser.KeyDeserializers[]"
},
{
  "name":"com.fasterxml.jackson.databind.deser.ValueInstantiators[]"
},
{
  "name":"com.fasterxml.jackson.databind.ext.Java7HandlersImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.databind.ext.Java7SupportImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.databind.module.SimpleModule",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"addAbstractTypeMapping","parameterTypes":["java.lang.Class","java.lang.Class"] },
    {"name":"addDeserializer","parameterTypes":["java.lang.Class","com.fasterxml.jackson.databind.JsonDeserializer"] },
    {"name":"addKeyDeserializer","parameterTypes":["java.lang.Class","com.fasterxml.jackson.databind.KeyDeserializer"] },
    {"name":"addKeySerializer","parameterTypes":["java.lang.Class","com.fasterxml.jackson.databind.JsonSerializer"] },
    {"name":"addSerializer","parameterTypes":["com.fasterxml.jackson.databind.JsonSerializer"] },
    {"name":"addSerializer","parameterTypes":["java.lang.Class","com.fasterxml.jackson.databind.JsonSerializer"] },
    {"name":"addValueInstantiator","parameterTypes":["java.lang.Class","com.fasterxml.jackson.databind.deser.ValueInstantiator"] },
    {"name":"getModuleName","parameterTypes":[] },
    {"name":"getTypeId","parameterTypes":[] },
    {"name":"registerSubtypes","parameterTypes":["java.util.Collection"] },
    {"name":"registerSubtypes","parameterTypes":["com.fasterxml.jackson.databind.jsontype.NamedType[]"] },
    {"name":"registerSubtypes","parameterTypes":["java.lang.Class[]"] },
    {"name":"setAbstractTypes","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver"] },
    {"name":"setDeserializerModifier","parameterTypes":["com.fasterxml.jackson.databind.deser.BeanDeserializerModifier"] },
    {"name":"setDeserializers","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleDeserializers"] },
    {"name":"setKeyDeserializers","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleKeyDeserializers"] },
    {"name":"setKeySerializers","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleSerializers"] },
    {"name":"setMixInAnnotation","parameterTypes":["java.lang.Class","java.lang.Class"] },
    {"name":"setSerializerModifier","parameterTypes":["com.fasterxml.jackson.databind.ser.BeanSerializerModifier"] },
    {"name":"setSerializers","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleSerializers"] },
    {"name":"setValueInstantiators","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleValueInstantiators"] },
    {"name":"setupModule","parameterTypes":["com.fasterxml.jackson.databind.Module$SetupContext"] },
    {"name":"version","parameterTypes":[] }
  ]
},
{
  "name":"com.fasterxml.jackson.databind.ser.Serializers[]"
},
{
  "name":"com.fasterxml.jackson.datatype.jdk8.Jdk8Module",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.datatype.jsr310.JavaTimeModule",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.module.paramnames.ParameterNamesModule",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"setupModule","parameterTypes":["com.fasterxml.jackson.databind.Module$SetupContext"] }]
},
{
  "name":"com.github.benmanes.caffeine.cache.BLCHeader$DrainStatusRef",
  "fields":[{"name":"drainStatus", "allowUnsafeAccess":true}]
},
{
  "name":"com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueueColdProducerFields",
  "fields":[{"name":"producerLimit", "allowUnsafeAccess":true}]
},
{
  "name":"com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueueConsumerFields",
  "fields":[{"name":"consumerIndex", "allowUnsafeAccess":true}]
},
{
  "name":"com.github.benmanes.caffeine.cache.BaseMpscLinkedArrayQueueProducerFields",
  "fields":[{"name":"producerIndex", "allowUnsafeAccess":true}]
},
{
  "name":"com.github.benmanes.caffeine.cache.Cache"
},
{
  "name":"com.github.benmanes.caffeine.cache.CacheLoader",
  "methods":[{"name":"loadAll","parameterTypes":["java.lang.Iterable"] }]
},
{
  "name":"com.github.benmanes.caffeine.cache.Caffeine"
},
{
  "name":"com.github.benmanes.caffeine.cache.PS",
  "fields":[
    {"name":"key", "allowUnsafeAccess":true},
    {"name":"value", "allowUnsafeAccess":true}
  ]
},
{
  "name":"com.github.benmanes.caffeine.cache.PSMS",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.github.benmanes.caffeine.cache.SSMS",
  "methods":[{"name":"<init>","parameterTypes":["com.github.benmanes.caffeine.cache.Caffeine","com.github.benmanes.caffeine.cache.CacheLoader","boolean"] }]
},
{
  "name":"com.github.benmanes.caffeine.cache.StripedBuffer",
  "fields":[{"name":"tableBusy", "allowUnsafeAccess":true}]
},
{
  "name":"com.google.gson.Gson",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"com.google.gson.GsonBuilder",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"com.google.protobuf.Message"
},
{
  "name":"com.sun.management.GarbageCollectionNotificationInfo"
},
{
  "name":"com.sun.management.OperatingSystemMXBean",
  "methods":[
    {"name":"getProcessCpuLoad","parameterTypes":[] },
    {"name":"getSystemCpuLoad","parameterTypes":[] }
  ]
},
{
  "name":"com.sun.management.UnixOperatingSystemMXBean",
  "methods":[
    {"name":"getMaxFileDescriptorCount","parameterTypes":[] },
    {"name":"getOpenFileDescriptorCount","parameterTypes":[] }
  ]
},
{
  "name":"com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.sun.proxy.$Proxy74",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"io.micrometer.core.annotation.Timed"
},
{
  "name":"io.micrometer.core.instrument.Clock",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"io.micrometer.core.instrument.Clock$1",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"monotonicTime","parameterTypes":[] },
    {"name":"wallTime","parameterTypes":[] }
  ]
},
{
  "name":"io.micrometer.core.instrument.MeterRegistry",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"clear","parameterTypes":[] },
    {"name":"close","parameterTypes":[] },
    {"name":"config","parameterTypes":[] },
    {"name":"counter","parameterTypes":["java.lang.String","java.lang.Iterable"] },
    {"name":"counter","parameterTypes":["java.lang.String","java.lang.String[]"] },
    {"name":"find","parameterTypes":["java.lang.String"] },
    {"name":"forEachMeter","parameterTypes":["java.util.function.Consumer"] },
    {"name":"gauge","parameterTypes":["java.lang.String","java.lang.Iterable","java.lang.Number"] },
    {"name":"gauge","parameterTypes":["java.lang.String","java.lang.Iterable","java.lang.Object","java.util.function.ToDoubleFunction"] },
    {"name":"gauge","parameterTypes":["java.lang.String","java.lang.Number"] },
    {"name":"gauge","parameterTypes":["java.lang.String","java.lang.Object","java.util.function.ToDoubleFunction"] },
    {"name":"gaugeCollectionSize","parameterTypes":["java.lang.String","java.lang.Iterable","java.util.Collection"] },
    {"name":"gaugeMapSize","parameterTypes":["java.lang.String","java.lang.Iterable","java.util.Map"] },
    {"name":"get","parameterTypes":["java.lang.String"] },
    {"name":"getMeters","parameterTypes":[] },
    {"name":"isClosed","parameterTypes":[] },
    {"name":"more","parameterTypes":[] },
    {"name":"remove","parameterTypes":["io.micrometer.core.instrument.Meter$Id"] },
    {"name":"remove","parameterTypes":["io.micrometer.core.instrument.Meter"] },
    {"name":"removeByPreFilterId","parameterTypes":["io.micrometer.core.instrument.Meter$Id"] },
    {"name":"summary","parameterTypes":["java.lang.String","java.lang.Iterable"] },
    {"name":"summary","parameterTypes":["java.lang.String","java.lang.String[]"] },
    {"name":"timer","parameterTypes":["java.lang.String","java.lang.Iterable"] },
    {"name":"timer","parameterTypes":["java.lang.String","java.lang.String[]"] }
  ]
},
{
  "name":"io.micrometer.core.instrument.binder.MeterBinder",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"io.micrometer.core.instrument.binder.jetty.JettyServerThreadPoolMetrics"
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.JvmGcMetrics",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]
},
{
  "name":"io.micrometer.core.instrument.binder.kafka.KafkaClientMetrics"
},
{
  "name":"io.micrometer.core.instrument.binder.logging.Log4j2Metrics"
},
{
  "name":"io.micrometer.core.instrument.binder.logging.LogbackMetrics",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"io.micrometer.core.instrument.binder.system.FileDescriptorMetrics",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]
},
{
  "name":"io.micrometer.core.instrument.binder.system.ProcessorMetrics",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]
},
{
  "name":"io.micrometer.core.instrument.binder.system.UptimeMetrics",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }]
},
{
  "name":"io.micrometer.core.instrument.binder.tomcat.TomcatMetrics"
},
{
  "name":"io.micrometer.core.instrument.composite.CompositeMeterRegistry"
},
{
  "name":"io.micrometer.core.instrument.config.MeterFilter",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"io.micrometer.core.instrument.config.MeterFilter$9",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"accept","parameterTypes":["io.micrometer.core.instrument.Meter$Id"] },
    {"name":"configure","parameterTypes":["io.micrometer.core.instrument.Meter$Id","io.micrometer.core.instrument.distribution.DistributionStatisticConfig"] }
  ]
},
{
  "name":"io.micrometer.core.instrument.config.MeterRegistryConfig",
  "methods":[{"name":"requireValid","parameterTypes":[] }]
},
{
  "name":"io.micrometer.core.lang.NonNullApi",
  "allDeclaredMethods":true
},
{
  "name":"io.micrometer.core.lang.NonNullFields",
  "allDeclaredMethods":true
},
{
  "name":"io.micrometer.core.lang.Nullable",
  "allDeclaredMethods":true
},
{
  "name":"io.micrometer.prometheus.PrometheusConfig",
  "allPublicMethods":true
},
{
  "name":"io.micrometer.prometheus.PrometheusMeterRegistry",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"io.netty.buffer.AbstractByteBufAllocator",
  "allDeclaredMethods":true
},
{
  "name":"io.netty.buffer.AbstractReferenceCountedByteBuf",
  "fields":[{"name":"refCnt", "allowUnsafeAccess":true}]
},
{
  "name":"io.netty.buffer.ByteBuf"
},
{
  "name":"io.netty.buffer.PooledByteBufAllocator"
},
{
  "name":"io.netty.channel.ChannelDuplexHandler",
  "methods":[
    {"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] },
    {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] },
    {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] },
    {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] },
    {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] },
    {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }
  ]
},
{
  "name":"io.netty.channel.ChannelHandlerAdapter",
  "methods":[{"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }]
},
{
  "name":"io.netty.channel.ChannelInboundHandlerAdapter",
  "methods":[
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] },
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] },
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }
  ]
},
{
  "name":"io.netty.channel.ChannelInitializer",
  "methods":[
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }
  ]
},
{
  "name":"io.netty.channel.ChannelOutboundHandlerAdapter",
  "methods":[
    {"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] },
    {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] },
    {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] },
    {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] },
    {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] },
    {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }
  ]
},
{
  "name":"io.netty.channel.CombinedChannelDuplexHandler",
  "methods":[
    {"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] },
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] },
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] },
    {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] },
    {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] },
    {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] },
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] },
    {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] },
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]
},
{
  "name":"io.netty.channel.DefaultChannelPipeline$HeadContext",
  "methods":[
    {"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] },
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] },
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] },
    {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] },
    {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] },
    {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] },
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] },
    {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] },
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]
},
{
  "name":"io.netty.channel.DefaultChannelPipeline$TailContext",
  "methods":[
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] },
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] },
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }
  ]
},
{
  "name":"io.netty.channel.epoll.Epoll"
},
{
  "name":"io.netty.handler.codec.ByteToMessageDecoder",
  "methods":[
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] },
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }
  ]
},
{
  "name":"io.netty.handler.codec.MessageToMessageDecoder",
  "methods":[{"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"io.netty.handler.codec.MessageToMessageEncoder",
  "methods":[{"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }]
},
{
  "name":"io.netty.handler.codec.dns.DatagramDnsQueryEncoder"
},
{
  "name":"io.netty.handler.codec.http.HttpServerCodec"
},
{
  "name":"io.netty.resolver.dns.DnsNameResolver$1"
},
{
  "name":"io.netty.resolver.dns.DnsNameResolver$3"
},
{
  "name":"io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler",
  "methods":[
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] },
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }
  ]
},
{
  "name":"io.netty.util.AbstractReferenceCounted",
  "fields":[{"name":"refCnt", "allowUnsafeAccess":true}]
},
{
  "name":"io.netty.util.ReferenceCountUtil",
  "allDeclaredMethods":true
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
  "fields":[{"name":"producerLimit", "allowUnsafeAccess":true}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
  "fields":[{"name":"consumerIndex", "allowUnsafeAccess":true}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
  "fields":[{"name":"producerIndex", "allowUnsafeAccess":true}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueConsumerIndexField",
  "fields":[{"name":"consumerIndex", "allowUnsafeAccess":true}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerIndexField",
  "fields":[{"name":"producerIndex", "allowUnsafeAccess":true}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerLimitField",
  "fields":[{"name":"producerLimit", "allowUnsafeAccess":true}]
},
{
  "name":"io.prometheus.client.CollectorRegistry",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"io.rsocket.RSocket"
},
{
  "name":"io.rsocket.SocketAcceptor",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"io.rsocket.core.RSocketServer"
},
{
  "name":"io.rsocket.internal.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
  "fields":[{"name":"producerLimit", "allowUnsafeAccess":true}]
},
{
  "name":"io.rsocket.internal.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
  "fields":[{"name":"consumerIndex", "allowUnsafeAccess":true}]
},
{
  "name":"io.rsocket.internal.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
  "fields":[{"name":"producerIndex", "allowUnsafeAccess":true}]
},
{
  "name":"io.rsocket.metadata.CompositeMetadata$Entry",
  "allDeclaredMethods":true
},
{
  "name":"io.rsocket.transport.netty.RSocketLengthCodec"
},
{
  "name":"io.rsocket.transport.netty.server.TcpServerTransport"
},
{
  "name":"java.beans.PropertyVetoException"
},
{
  "name":"java.io.Closeable",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"java.io.FilePermission"
},
{
  "name":"java.io.Serializable",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"java.lang.AutoCloseable",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"java.lang.Class",
  "allDeclaredMethods":true
},
{
  "name":"java.lang.ClassLoader",
  "methods":[{"name":"defineClass","parameterTypes":["java.lang.String","byte[]","int","int","java.security.ProtectionDomain"] }]
},
{
  "name":"java.lang.Class[]"
},
{
  "name":"java.lang.Iterable",
  "allPublicMethods":true
},
{
  "name":"java.lang.Module",
  "allDeclaredMethods":true
},
{
  "name":"java.lang.Object",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"java.lang.Object[]"
},
{
  "name":"java.lang.Runnable",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"java.lang.Runtime",
  "methods":[{"name":"version","parameterTypes":[] }]
},
{
  "name":"java.lang.Runtime$Version",
  "methods":[{"name":"major","parameterTypes":[] }]
},
{
  "name":"java.lang.RuntimePermission"
},
{
  "name":"java.lang.String",
  "allDeclaredMethods":true
},
{
  "name":"java.lang.String[]"
},
{
  "name":"java.lang.Thread",
  "fields":[{"name":"threadLocalRandomProbe", "allowUnsafeAccess":true}]
},
{
  "name":"java.lang.annotation.Documented",
  "allDeclaredMethods":true
},
{
  "name":"java.lang.annotation.Inherited",
  "allDeclaredMethods":true
},
{
  "name":"java.lang.annotation.Repeatable",
  "allDeclaredMethods":true
},
{
  "name":"java.lang.annotation.Retention",
  "allDeclaredMethods":true
},
{
  "name":"java.lang.annotation.Target",
  "allDeclaredMethods":true
},
{
  "name":"java.lang.invoke.MethodHandles",
  "methods":[{"name":"privateLookupIn","parameterTypes":["java.lang.Class","java.lang.invoke.MethodHandles$Lookup"] }]
},
{
  "name":"java.lang.invoke.MethodHandles$Lookup",
  "methods":[{"name":"defineClass","parameterTypes":["byte[]"] }]
},
{
  "name":"java.lang.management.ManagementFactory",
  "methods":[{"name":"getRuntimeMXBean","parameterTypes":[] }]
},
{
  "name":"java.lang.management.RuntimeMXBean",
  "methods":[
    {"name":"getInputArguments","parameterTypes":[] },
    {"name":"getName","parameterTypes":[] }
  ]
},
{
  "name":"java.lang.reflect.AccessibleObject",
  "fields":[{"name":"override"}]
},
{
  "name":"java.lang.reflect.AnnotatedElement",
  "allPublicMethods":true
},
{
  "name":"java.lang.reflect.GenericDeclaration",
  "allPublicMethods":true
},
{
  "name":"java.lang.reflect.Proxy",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"getInvocationHandler","parameterTypes":["java.lang.Object"] },
    {"name":"getProxyClass","parameterTypes":["java.lang.ClassLoader","java.lang.Class[]"] },
    {"name":"isProxyClass","parameterTypes":["java.lang.Class"] },
    {"name":"newProxyInstance","parameterTypes":["java.lang.ClassLoader","java.lang.Class[]","java.lang.reflect.InvocationHandler"] }
  ]
},
{
  "name":"java.lang.reflect.Type",
  "allPublicMethods":true
},
{
  "name":"java.net.NetPermission"
},
{
  "name":"java.net.SocketOption"
},
{
  "name":"java.net.SocketPermission"
},
{
  "name":"java.net.StandardSocketOptions",
  "fields":[
    {"name":"IP_MULTICAST_IF"},
    {"name":"IP_MULTICAST_LOOP"},
    {"name":"IP_MULTICAST_TTL"}
  ]
},
{
  "name":"java.net.URLPermission",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.String"] }]
},
{
  "name":"java.nio.Bits",
  "fields":[{"name":"UNALIGNED"}]
},
{
  "name":"java.nio.Buffer",
  "fields":[{"name":"address", "allowUnsafeAccess":true}]
},
{
  "name":"java.nio.DirectByteBuffer",
  "methods":[{"name":"<init>","parameterTypes":["long","int"] }]
},
{
  "name":"java.nio.channels.NetworkChannel",
  "methods":[
    {"name":"getOption","parameterTypes":["java.net.SocketOption"] },
    {"name":"setOption","parameterTypes":["java.net.SocketOption","java.lang.Object"] }
  ]
},
{
  "name":"java.security.AllPermission"
},
{
  "name":"java.security.MessageDigestSpi"
},
{
  "name":"java.security.SecureRandomParameters"
},
{
  "name":"java.security.SecurityPermission"
},
{
  "name":"java.util.EventListener",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"java.util.LinkedHashSet",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"java.util.PropertyPermission"
},
{
  "name":"java.util.concurrent.Executor"
},
{
  "name":"java.util.concurrent.Flow$Publisher"
},
{
  "name":"java.util.logging.LogManager"
},
{
  "name":"javax.annotation.ManagedBean"
},
{
  "name":"javax.annotation.Nonnull",
  "allDeclaredMethods":true
},
{
  "name":"javax.annotation.Resource"
},
{
  "name":"javax.annotation.meta.TypeQualifier",
  "allDeclaredMethods":true
},
{
  "name":"javax.annotation.meta.TypeQualifierDefault",
  "allDeclaredMethods":true
},
{
  "name":"javax.cache.CacheManager"
},
{
  "name":"javax.cache.Caching"
},
{
  "name":"javax.naming.ldap.LdapContext"
},
{
  "name":"javax.sql.DataSource"
},
{
  "name":"jdk.internal.misc.Unsafe",
  "methods":[{"name":"getUnsafe","parameterTypes":[] }]
},
{
  "name":"org.apache.logging.log4j.spi.ExtendedLogger"
},
{
  "name":"org.apache.logging.slf4j.SLF4JProvider"
},
{
  "name":"org.reactivestreams.Processor",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.reactivestreams.Publisher",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.reactivestreams.Subscriber",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.slf4j.LoggerFactory"
},
{
  "name":"org.slf4j.bridge.SLF4JBridgeHandler"
},
{
  "name":"org.slf4j.spi.LocationAwareLogger"
},
{
  "name":"org.springframework.beans.ExtendedBeanInfoFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.beans.factory.Aware",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.BeanClassLoaderAware",
  "allPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.BeanFactoryAware",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.BeanNameAware",
  "allPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.DisposableBean",
  "allPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.FactoryBean",
  "allPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.InitializingBean",
  "allPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.SmartInitializingSingleton",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.annotation.Autowired",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.beans.factory.annotation.Qualifier",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.beans.factory.annotation.Value",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.beans.factory.config.BeanFactoryPostProcessor",
  "allPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.config.BeanPostProcessor",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.support.BeanDefinitionRegistryPostProcessor",
  "allPublicMethods":true
},
{
  "name":"org.springframework.beans.factory.support.NullBean",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.beans.factory.xml.XmlBeanDefinitionReader",
  "allPublicFields":true
},
{
  "name":"org.springframework.boot.ClearCachesApplicationListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.NativePropertiesListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.SpringBootConfiguration",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.audit.AuditEventRepository"
},
{
  "name":"org.springframework.boot.actuate.audit.AuditEventsEndpoint"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.audit.AuditAutoConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.audit.AuditEventsEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.availability.AvailabilityProbesAutoConfiguration$ProbesCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.beans.BeansEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.cache.CachesEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.condition.ConditionalOnAvailableEndpoint",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.condition.OnAvailableEndpointCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.expose.IncludeExcludeEndpointFilter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.MappingWebEndpointPathMapper",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties$Exposure",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.reactive.WebFluxEndpointManagementContextConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.AutoConfiguredHealthContributorRegistry",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"registerContributor","parameterTypes":["java.lang.String","java.lang.Object"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.AutoConfiguredHealthEndpointGroups",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.AutoConfiguredReactiveHealthContributorRegistry",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"registerContributor","parameterTypes":["java.lang.String","java.lang.Object"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.ConditionalOnEnabledHealthIndicator",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration$HealthEndpointGroupsBeanPostProcessor",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"getShowDetails","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointReactiveWebExtensionConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"getRoles","parameterTypes":[] },
    {"name":"getShowComponents","parameterTypes":[] },
    {"name":"getStatus","parameterTypes":[] },
    {"name":"setRoles","parameterTypes":["java.util.Set"] },
    {"name":"setShowComponents","parameterTypes":["org.springframework.boot.actuate.autoconfigure.health.HealthProperties$Show"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.OnEnabledHealthIndicatorCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.ReactiveHealthEndpointConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.info.ConditionalOnEnabledInfoContributor",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.info.InfoEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.info.OnEnabledInfoContributorCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointAutoConfiguration$LogFileCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.logging.LoggersEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.logging.LoggersEndpointAutoConfiguration$OnEnabledLoggingSystemCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.management.HeapDumpWebEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.management.ThreadDumpEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryConfiguration$MultipleNonPrimaryMeterRegistriesCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration$LogbackLoggingCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MeterRegistryPostProcessor",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MetricsEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.NoOpMeterRegistryConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.PropertiesMeterFilter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"accept","parameterTypes":["io.micrometer.core.instrument.Meter$Id"] },
    {"name":"configure","parameterTypes":["io.micrometer.core.instrument.Meter$Id","io.micrometer.core.instrument.distribution.DistributionStatisticConfig"] },
    {"name":"map","parameterTypes":["io.micrometer.core.instrument.Meter$Id"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.ConditionalOnEnabledMetricsExport",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.OnMetricsExportEnabledCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusMetricsExportAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusMetricsExportAutoConfiguration$PrometheusScrapeEndpointConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.prometheus.PrometheusPropertiesConfigAdapter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"descriptions","parameterTypes":[] },
    {"name":"histogramFlavor","parameterTypes":[] },
    {"name":"prefix","parameterTypes":[] },
    {"name":"step","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.properties.PropertiesConfigAdapter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.web.client.HttpClientMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.web.client.RestTemplateMetricsConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.web.client.WebClientMetricsConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.web.reactive.WebFluxMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.startup.StartupEndpointAutoConfiguration$ApplicationStartupCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceAutoConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.trace.http.HttpTraceEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.ManagementContextConfiguration",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.ManagementContextFactory",
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.ManagementContextType"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ReactiveWebConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.reactive.ReactiveManagementContextAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.reactive.ReactiveManagementContextFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ConditionalOnManagementPort",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.EnableManagementContext",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[{"name":"afterSingletonsInstantiated","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration$EnableSameManagementContextConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextConfigurationImportSelector",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementPortType"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.OnManagementPortCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.beans.BeansEndpoint",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.cache.CachesEndpoint",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.cache.CachesEndpointWebExtension",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.context.ShutdownEndpoint"
},
{
  "name":"org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.EndpointFilter",
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.EndpointsSupplier",
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.DeleteOperation",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.Endpoint",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.EndpointConverter",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"getEndpoints","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.EndpointExtension",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.FilteredEndpoint",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.ReadOperation",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.WriteOperation",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.invoke.OperationInvokerAdvisor",
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper",
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.invoke.convert.ConversionServiceParameterValueMapper",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.PathMapper",
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier",
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointDiscoverer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier",
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.EndpointWebExtension",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.WebEndpoint",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointDiscoverer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointFilter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"getEndpoints","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$LinksHandler",
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$ReadOperationHandler",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$WriteOperationHandler",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.reactive.ControllerEndpointHandlerMapping",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$WebFluxLinksHandler",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.env.EnvironmentEndpoint",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.env.EnvironmentEndpointWebExtension",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.AbstractHealthIndicator",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"health","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.health.ContributorRegistry",
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.DefaultContributorRegistry",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"getContributor","parameterTypes":["java.lang.String"] },
    {"name":"unregisterContributor","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.springframework.boot.actuate.health.DefaultHealthContributorRegistry",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"iterator","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.health.DefaultReactiveHealthContributorRegistry",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"iterator","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.health.HealthContributorRegistry",
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.HealthEndpoint",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.HealthEndpointGroups",
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.HealthEndpointSupport",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.HealthIndicator",
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.HttpCodeStatusMapper",
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.NamedContributors",
  "methods":[{"name":"stream","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.health.PingHealthIndicator",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.ReactiveHealthContributor",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.ReactiveHealthContributorRegistry",
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.ReactiveHealthEndpointWebExtension",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.ReactiveHealthIndicator",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.SimpleHttpCodeStatusMapper",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.SimpleStatusAggregator",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.StatusAggregator",
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.info.EnvironmentInfoContributor",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.info.InfoContributor",
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.info.InfoEndpoint",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.logging.LogFileWebEndpoint"
},
{
  "name":"org.springframework.boot.actuate.logging.LoggersEndpoint",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.management.HeapDumpWebEndpoint",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.management.ThreadDumpEndpoint",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.metrics.MetricsEndpoint",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.metrics.cache.CacheMeterBinderProvider"
},
{
  "name":"org.springframework.boot.actuate.metrics.export.prometheus.PrometheusScrapeEndpoint",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.metrics.web.reactive.client.DefaultWebClientExchangeTagsProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.metrics.web.reactive.client.MetricsWebClientCustomizer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.metrics.web.reactive.client.WebClientExchangeTagsProvider",
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.metrics.web.reactive.server.DefaultWebFluxTagsProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.metrics.web.reactive.server.MetricsWebFilter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.metrics.web.reactive.server.WebFluxTagsProvider",
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.system.DiskSpaceHealthIndicator",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.trace.http.HttpTraceEndpoint"
},
{
  "name":"org.springframework.boot.actuate.trace.http.HttpTraceRepository"
},
{
  "name":"org.springframework.boot.actuate.web.mappings.MappingDescriptionProvider",
  "allPublicMethods":true,
  "methods":[{"name":"describeMappings","parameterTypes":["org.springframework.context.ApplicationContext"] }]
},
{
  "name":"org.springframework.boot.actuate.web.mappings.MappingsEndpoint",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.web.mappings.reactive.DispatcherHandlersMappingDescriptionProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationExcludeFilter",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationImportSelector",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationImportSelector$AutoConfigurationGroup",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationPackage",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigureAfter",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigureBefore",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigureOrder",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.BackgroundPreinitializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.EnableAutoConfiguration",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer$SharedMetadataReaderFactoryBean",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.SpringBootApplication",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.aop.AopAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheConfigurationImportSelector",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.cache.CacheCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.codec.CodecProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionEvaluationReportAutoConfigurationImportListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnBean",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnClass",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnCloudPlatform",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnExpression",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnMissingClass",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnProperty",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnResource",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnSingleCandidate",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication$Type"
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnBeanCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnClassCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnCloudPlatformCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnExpressionCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnPropertyCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnResourceCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.SearchStrategy"
},
{
  "name":"org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.context.LifecycleProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration$ResourceBundleCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration$StandardGsonBuilderCustomizer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.gson.GsonBuilderCustomizer",
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.gson.GsonProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$NotReactiveWebApplicationCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$DefaultCodecsConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$DefaultCodecsConfiguration$$Lambda$569/0x000000084047f840",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$JacksonCodecConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$JacksonCodecConfiguration$$Lambda$570/0x000000084047fc40",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration$GitResourceAvailableCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.info.ProjectInfoProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilderCustomizer",
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.mustache.MustacheTemplateAvailabilityProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.security.ConditionalOnDefaultWebSecurity",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.security.DefaultWebSecurityCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.thymeleaf.ThymeleafTemplateAvailabilityProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.web.ConditionalOnEnabledResourceChain",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.OnEnabledResourceChainCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.ResourceProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"getCache","parameterTypes":[] },
    {"name":"getChain","parameterTypes":[] },
    {"name":"getStaticLocations","parameterTypes":[] },
    {"name":"isAddMappings","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties$Servlet",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.WebProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.WebProperties$Resources",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"hasBeenCustomized","parameterTypes":[] },
    {"name":"setAddMappings","parameterTypes":["boolean"] },
    {"name":"setStaticLocations","parameterTypes":["java.lang.String[]"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration$NotReactiveWebApplicationCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$NettyWebServerFactoryCustomizerConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.embedded.NettyWebServerFactoryCustomizer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.format.WebConversionService",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration$AnnotationConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedJetty"
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedNetty",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedTomcat"
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedUndertow"
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryCustomizer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$EnableWebFluxConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$WebFluxConfig",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true,
  "methods":[
    {"name":"addFormatters","parameterTypes":["org.springframework.format.FormatterRegistry"] },
    {"name":"addResourceHandlers","parameterTypes":["org.springframework.web.reactive.config.ResourceHandlerRegistry"] },
    {"name":"configureArgumentResolvers","parameterTypes":["org.springframework.web.reactive.result.method.annotation.ArgumentResolverConfigurer"] },
    {"name":"configureHttpMessageCodecs","parameterTypes":["org.springframework.http.codec.ServerCodecConfigurer"] },
    {"name":"configureViewResolvers","parameterTypes":["org.springframework.web.reactive.config.ViewResolverRegistry"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$WelcomePageConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"afterPropertiesSet","parameterTypes":[] },
    {"name":"handle","parameterTypes":["org.springframework.web.server.ServerWebExchange","java.lang.Throwable"] },
    {"name":"setMessageReaders","parameterTypes":["java.util.List"] },
    {"name":"setMessageWriters","parameterTypes":["java.util.List"] },
    {"name":"setViewResolvers","parameterTypes":["java.util.List"] }
  ]
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.error.DefaultErrorWebExceptionHandler",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.error.ErrorWebFluxAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorConfiguration$JettyClient"
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorConfiguration$ReactorNetty",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration$WebClientCodecsConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientCodecCustomizer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.JspTemplateAvailabilityProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.availability.ApplicationAvailability",
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.availability.ApplicationAvailabilityBean",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.builder.ParentContextCloserApplicationListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.cloud.CloudPlatform"
},
{
  "name":"org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.ContextIdApplicationContextInitializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.FileEncodingApplicationListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.TypeExcludeFilter",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.context.config.AnsiOutputApplicationListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.context.config.ConfigDataLocation[]"
},
{
  "name":"org.springframework.boot.context.config.ConfigDataProperties",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.context.config.ConfigTreeConfigDataLoader",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.context.config.ConfigTreeConfigDataLocationResolver",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.context.config.DelegatingApplicationContextInitializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.DelegatingApplicationListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.StandardConfigDataLoader",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.context.config.StandardConfigDataLocationResolver",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.context.event.EventPublishingRunListener",
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.SpringApplication","java.lang.String[]"] }]
},
{
  "name":"org.springframework.boot.context.logging.LoggingApplicationListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.properties.BoundConfigurationProperties",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.ConfigurationProperties",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.ConfigurationPropertiesBinder",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.ConfigurationPropertiesBinder$Factory",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.DeprecatedConfigurationProperty",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.EnableConfigurationProperties",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.context.properties.NestedConfigurationProperty",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.bind.Name",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.convert.DurationUnit",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.env.EnvironmentPostProcessorApplicationListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.env.PropertiesPropertySourceLoader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.env.RandomValuePropertySourceEnvironmentPostProcessor",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.env.YamlPropertySourceLoader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.info.BuildProperties"
},
{
  "name":"org.springframework.boot.info.GitProperties"
},
{
  "name":"org.springframework.boot.jackson.JsonComponentModule",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider"
},
{
  "name":"org.springframework.boot.liquibase.LiquibaseServiceLocatorApplicationListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.loader.LaunchedURLClassLoader",
  "methods":[{"name":"clearCache","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.LoggingSystem"
},
{
  "name":"org.springframework.boot.logging.java.JavaLoggingSystem$Factory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.log4j2.Log4J2LoggingSystem$Factory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.logback.ColorConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.logback.LogbackLoggingSystem$Factory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.reactor.DebugAgentEnvironmentPostProcessor",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.rsocket.context.RSocketPortInfoApplicationContextInitializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.task.TaskExecutorBuilder",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.task.TaskSchedulerBuilder",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter",
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter$$Lambda$539/0x0000000840460040",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.web.client.RestTemplateBuilder"
},
{
  "name":"org.springframework.boot.web.codec.CodecCustomizer",
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.web.context.ServerPortInfoApplicationContextInitializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.embedded.netty.NettyReactiveWebServerFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"getShutdown","parameterTypes":[] },
    {"name":"setShutdown","parameterTypes":["org.springframework.boot.web.server.Shutdown"] }
  ]
},
{
  "name":"org.springframework.boot.web.reactive.error.DefaultErrorAttributes",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"getErrorAttributes","parameterTypes":["org.springframework.web.reactive.function.server.ServerRequest","org.springframework.boot.web.error.ErrorAttributeOptions"] },
    {"name":"getErrorAttributes","parameterTypes":["org.springframework.web.reactive.function.server.ServerRequest","boolean"] }
  ]
},
{
  "name":"org.springframework.boot.web.reactive.error.ErrorAttributes",
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.web.reactive.error.ErrorWebExceptionHandler",
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.web.reactive.function.client.WebClientCustomizer",
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.web.reactive.server.AbstractReactiveWebServerFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.boot.web.reactive.server.ConfigurableReactiveWebServerFactory",
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.web.reactive.server.ReactiveWebServerFactory"
},
{
  "name":"org.springframework.boot.web.server.AbstractConfigurableWebServerFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"addErrorPages","parameterTypes":["org.springframework.boot.web.server.ErrorPage[]"] },
    {"name":"getAddress","parameterTypes":[] },
    {"name":"getCompression","parameterTypes":[] },
    {"name":"getErrorPages","parameterTypes":[] },
    {"name":"getHttp2","parameterTypes":[] },
    {"name":"getPort","parameterTypes":[] },
    {"name":"getServerHeader","parameterTypes":[] },
    {"name":"getSsl","parameterTypes":[] },
    {"name":"getSslStoreProvider","parameterTypes":[] },
    {"name":"setAddress","parameterTypes":["java.net.InetAddress"] },
    {"name":"setCompression","parameterTypes":["org.springframework.boot.web.server.Compression"] },
    {"name":"setErrorPages","parameterTypes":["java.util.Set"] },
    {"name":"setHttp2","parameterTypes":["org.springframework.boot.web.server.Http2"] },
    {"name":"setPort","parameterTypes":["int"] },
    {"name":"setServerHeader","parameterTypes":["java.lang.String"] },
    {"name":"setSsl","parameterTypes":["org.springframework.boot.web.server.Ssl"] },
    {"name":"setSslStoreProvider","parameterTypes":["org.springframework.boot.web.server.SslStoreProvider"] }
  ]
},
{
  "name":"org.springframework.boot.web.server.ConfigurableWebServerFactory",
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.web.server.WebServerFactoryCustomizer",
  "allPublicMethods":true
},
{
  "name":"org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] },
    {"name":"postProcessBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }
  ]
},
{
  "name":"org.springframework.cache.Cache"
},
{
  "name":"org.springframework.cache.CacheManager"
},
{
  "name":"org.springframework.cache.interceptor.CacheAspectSupport"
},
{
  "name":"org.springframework.cglib.core.MethodWrapper$MethodWrapperKey",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cglib.core.MethodWrapper$MethodWrapperKey$$KeyFactoryByCGLIB$$552be97a",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cglib.proxy.Enhancer$EnhancerKey",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.cglib.proxy.Enhancer$EnhancerKey$$KeyFactoryByCGLIB$$4ce19e8f",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.ApplicationContext"
},
{
  "name":"org.springframework.context.ApplicationContextAware",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.context.ApplicationListener",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.context.ApplicationStartupAware",
  "allPublicMethods":true
},
{
  "name":"org.springframework.context.EmbeddedValueResolverAware",
  "allPublicMethods":true
},
{
  "name":"org.springframework.context.EnvironmentAware",
  "allPublicMethods":true
},
{
  "name":"org.springframework.context.LifecycleProcessor",
  "allPublicMethods":true
},
{
  "name":"org.springframework.context.ResourceLoaderAware",
  "allPublicMethods":true
},
{
  "name":"org.springframework.context.annotation.AnnotationScopeMetadataResolver",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.annotation.Bean",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.CommonAnnotationBeanPostProcessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.annotation.ComponentScan",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.ComponentScan$Filter",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Conditional",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Configuration",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.ConfigurationClassEnhancer$EnhancedConfiguration",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.context.annotation.ConfigurationClassParser$DefaultDeferredImportSelectorGroup",
  "allDeclaredConstructors":true
},
{
  "name":"org.springframework.context.annotation.ConfigurationClassPostProcessor",
  "allDeclaredFields":true,
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.annotation.Import",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Lazy",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Primary",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Scope",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.context.event.DefaultEventListenerFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.event.EventListenerMethodProcessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.support.ApplicationObjectSupport",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"getApplicationContext","parameterTypes":[] },
    {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }
  ]
},
{
  "name":"org.springframework.context.support.DefaultLifecycleProcessor",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.context.support.PropertySourcesPlaceholderConfigurer"
},
{
  "name":"org.springframework.core.Ordered",
  "allPublicMethods":true
},
{
  "name":"org.springframework.core.PriorityOrdered",
  "allPublicMethods":true
},
{
  "name":"org.springframework.core.ReactiveAdapterRegistry",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.core.annotation.AliasFor",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.core.annotation.AnnotationAttributes[]"
},
{
  "name":"org.springframework.core.annotation.Order",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.core.convert.support.ConfigurableConversionService",
  "allPublicMethods":true
},
{
  "name":"org.springframework.core.convert.support.GenericConversionService",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"addConverter","parameterTypes":["java.lang.Class","java.lang.Class","org.springframework.core.convert.converter.Converter"] },
    {"name":"addConverter","parameterTypes":["org.springframework.core.convert.converter.Converter"] },
    {"name":"addConverter","parameterTypes":["org.springframework.core.convert.converter.GenericConverter"] },
    {"name":"addConverterFactory","parameterTypes":["org.springframework.core.convert.converter.ConverterFactory"] },
    {"name":"canBypassConvert","parameterTypes":["org.springframework.core.convert.TypeDescriptor","org.springframework.core.convert.TypeDescriptor"] },
    {"name":"canConvert","parameterTypes":["java.lang.Class","java.lang.Class"] },
    {"name":"canConvert","parameterTypes":["org.springframework.core.convert.TypeDescriptor","org.springframework.core.convert.TypeDescriptor"] },
    {"name":"convert","parameterTypes":["java.lang.Object","java.lang.Class"] },
    {"name":"convert","parameterTypes":["java.lang.Object","org.springframework.core.convert.TypeDescriptor"] },
    {"name":"convert","parameterTypes":["java.lang.Object","org.springframework.core.convert.TypeDescriptor","org.springframework.core.convert.TypeDescriptor"] },
    {"name":"removeConvertible","parameterTypes":["java.lang.Class","java.lang.Class"] },
    {"name":"toString","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.core.type.classreading.MetadataReaderFactory",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.format.FormatterRegistry",
  "allPublicMethods":true
},
{
  "name":"org.springframework.format.support.DefaultFormattingConversionService",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"addDefaultFormatters","parameterTypes":["org.springframework.format.FormatterRegistry"] }]
},
{
  "name":"org.springframework.format.support.FormattingConversionService",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"addFormatter","parameterTypes":["org.springframework.format.Formatter"] },
    {"name":"addFormatterForFieldAnnotation","parameterTypes":["org.springframework.format.AnnotationFormatterFactory"] },
    {"name":"addFormatterForFieldType","parameterTypes":["java.lang.Class","org.springframework.format.Formatter"] },
    {"name":"addFormatterForFieldType","parameterTypes":["java.lang.Class","org.springframework.format.Printer","org.springframework.format.Parser"] },
    {"name":"addParser","parameterTypes":["org.springframework.format.Parser"] },
    {"name":"addPrinter","parameterTypes":["org.springframework.format.Printer"] },
    {"name":"setEmbeddedValueResolver","parameterTypes":["org.springframework.util.StringValueResolver"] }
  ]
},
{
  "name":"org.springframework.http.ReactiveHttpInputMessage"
},
{
  "name":"org.springframework.http.client.reactive.ClientHttpConnector"
},
{
  "name":"org.springframework.http.client.reactive.ReactorResourceFactory",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.http.codec.ClientCodecConfigurer"
},
{
  "name":"org.springframework.http.codec.CodecConfigurer",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.http.codec.ServerCodecConfigurer",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.http.codec.support.BaseCodecConfigurer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.http.codec.support.DefaultClientCodecConfigurer"
},
{
  "name":"org.springframework.http.codec.support.DefaultServerCodecConfigurer",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] },
    {"name":"clone","parameterTypes":[] },
    {"name":"customCodecs","parameterTypes":[] },
    {"name":"defaultCodecs","parameterTypes":[] },
    {"name":"getReaders","parameterTypes":[] },
    {"name":"getWriters","parameterTypes":[] },
    {"name":"registerDefaults","parameterTypes":["boolean"] }
  ]
},
{
  "name":"org.springframework.http.converter.HttpMessageConverter"
},
{
  "name":"org.springframework.http.converter.json.Jackson2ObjectMapperBuilder",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.http.server.reactive.HttpHandler",
  "allPublicMethods":true
},
{
  "name":"org.springframework.jmx.export.MBeanExporter"
},
{
  "name":"org.springframework.nativex.utils.LiteConfigurationInitializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor"
},
{
  "name":"org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler"
},
{
  "name":"org.springframework.stereotype.Component",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.stereotype.Controller",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.stereotype.Indexed",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.util.ConcurrentReferenceHashMap$Segment[]"
},
{
  "name":"org.springframework.validation.Validator",
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.Mapping",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.RequestMapping",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.RequestMethod[]"
},
{
  "name":"org.springframework.web.bind.annotation.ResponseBody",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.RestController",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.client.RestTemplate"
},
{
  "name":"org.springframework.web.context.support.GenericWebApplicationContext"
},
{
  "name":"org.springframework.web.reactive.DispatcherHandler",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.reactive.HandlerAdapter",
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.reactive.HandlerMapping",
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.reactive.HandlerResult"
},
{
  "name":"org.springframework.web.reactive.HandlerResultHandler",
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.reactive.accept.RequestedContentTypeResolver",
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.reactive.accept.RequestedContentTypeResolverBuilder"
},
{
  "name":"org.springframework.web.reactive.accept.RequestedContentTypeResolverBuilder$$Lambda$624/0x00000008404c8440",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.reactive.config.CorsRegistry"
},
{
  "name":"org.springframework.web.reactive.config.DelegatingWebFluxConfiguration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.reactive.config.EnableWebFlux",
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.reactive.config.PathMatchConfigurer"
},
{
  "name":"org.springframework.web.reactive.config.ResourceHandlerRegistry"
},
{
  "name":"org.springframework.web.reactive.config.ViewResolverRegistry"
},
{
  "name":"org.springframework.web.reactive.config.WebFluxConfigurationSupport",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.reactive.config.WebFluxConfigurationSupport$NoOpValidator",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.reactive.config.WebFluxConfigurer",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.reactive.function.client.WebClient"
},
{
  "name":"org.springframework.web.reactive.function.client.WebClient$Builder"
},
{
  "name":"org.springframework.web.reactive.function.server.HandlerFunction",
  "methods":[{"name":"handle","parameterTypes":["org.springframework.web.reactive.function.server.ServerRequest"] }]
},
{
  "name":"org.springframework.web.reactive.function.server.support.HandlerFunctionAdapter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.reactive.function.server.support.RouterFunctionMapping",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.reactive.function.server.support.ServerResponseResultHandler",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.reactive.handler.AbstractHandlerMapping",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"getCorsProcessor","parameterTypes":[] },
    {"name":"getHandler","parameterTypes":["org.springframework.web.server.ServerWebExchange"] },
    {"name":"getOrder","parameterTypes":[] },
    {"name":"getPathPatternParser","parameterTypes":[] },
    {"name":"setBeanName","parameterTypes":["java.lang.String"] },
    {"name":"setCorsConfigurationSource","parameterTypes":["org.springframework.web.cors.reactive.CorsConfigurationSource"] },
    {"name":"setCorsConfigurations","parameterTypes":["java.util.Map"] },
    {"name":"setCorsProcessor","parameterTypes":["org.springframework.web.cors.reactive.CorsProcessor"] },
    {"name":"setOrder","parameterTypes":["int"] },
    {"name":"setUseCaseSensitiveMatch","parameterTypes":["boolean"] },
    {"name":"setUseTrailingSlashMatch","parameterTypes":["boolean"] }
  ]
},
{
  "name":"org.springframework.web.reactive.handler.AbstractUrlHandlerMapping",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"getHandlerInternal","parameterTypes":["org.springframework.web.server.ServerWebExchange"] },
    {"name":"getHandlerMap","parameterTypes":[] },
    {"name":"setLazyInitHandlers","parameterTypes":["boolean"] }
  ]
},
{
  "name":"org.springframework.web.reactive.handler.SimpleUrlHandlerMapping",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.reactive.handler.WebFluxResponseStatusExceptionHandler",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.reactive.resource.ResourceUrlProvider",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.reactive.result.HandlerResultHandlerSupport",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"getAdapterRegistry","parameterTypes":[] },
    {"name":"getContentTypeResolver","parameterTypes":[] },
    {"name":"getOrder","parameterTypes":[] },
    {"name":"setOrder","parameterTypes":["int"] }
  ]
},
{
  "name":"org.springframework.web.reactive.result.SimpleHandlerAdapter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.reactive.result.method.AbstractHandlerMethodMapping",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"afterPropertiesSet","parameterTypes":[] },
    {"name":"getHandlerMethods","parameterTypes":[] },
    {"name":"registerMapping","parameterTypes":["java.lang.Object","java.lang.Object","java.lang.reflect.Method"] },
    {"name":"unregisterMapping","parameterTypes":["java.lang.Object"] }
  ]
},
{
  "name":"org.springframework.web.reactive.result.method.AbstractHandlerMethodMapping$PreFlightAmbiguousMatchHandler",
  "methods":[{"name":"handle","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.reactive.result.method.RequestMappingInfoHandlerMapping",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"getHandlerInternal","parameterTypes":["org.springframework.web.server.ServerWebExchange"] }]
},
{
  "name":"org.springframework.web.reactive.result.method.RequestMappingInfoHandlerMapping$HttpOptionsHandler",
  "methods":[{"name":"handle","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.reactive.result.method.annotation.AbstractMessageWriterResultHandler",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[{"name":"getMessageWriters","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.reactive.result.method.annotation.ArgumentResolverConfigurer"
},
{
  "name":"org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"afterPropertiesSet","parameterTypes":[] },
    {"name":"getContentTypeResolver","parameterTypes":[] },
    {"name":"getPathPrefixes","parameterTypes":[] },
    {"name":"registerMapping","parameterTypes":["java.lang.Object","java.lang.Object","java.lang.reflect.Method"] },
    {"name":"registerMapping","parameterTypes":["org.springframework.web.reactive.result.method.RequestMappingInfo","java.lang.Object","java.lang.reflect.Method"] },
    {"name":"setContentTypeResolver","parameterTypes":["org.springframework.web.reactive.accept.RequestedContentTypeResolver"] },
    {"name":"setEmbeddedValueResolver","parameterTypes":["org.springframework.util.StringValueResolver"] },
    {"name":"setPathPrefixes","parameterTypes":["java.util.Map"] }
  ]
},
{
  "name":"org.springframework.web.reactive.result.method.annotation.ResponseBodyResultHandler",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.reactive.result.method.annotation.ResponseEntityResultHandler",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.reactive.result.view.ViewResolutionResultHandler",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.reactive.socket.server.support.WebSocketHandlerAdapter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.reactive.socket.server.upgrade.ReactorNettyRequestUpgradeStrategy",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.server.WebExceptionHandler",
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.server.WebFilter",
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.server.WebHandler",
  "allPublicMethods":true
},
{
  "name":"org.springframework.web.server.adapter.HttpWebHandlerAdapter",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.server.handler.ResponseStatusExceptionHandler",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"handle","parameterTypes":["org.springframework.web.server.ServerWebExchange","java.lang.Throwable"] },
    {"name":"setWarnLogCategory","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"org.springframework.web.server.handler.WebHandlerDecorator",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"getDelegate","parameterTypes":[] },
    {"name":"handle","parameterTypes":["org.springframework.web.server.ServerWebExchange"] },
    {"name":"toString","parameterTypes":[] }
  ]
},
{
  "name":"org.springframework.web.server.i18n.AcceptHeaderLocaleContextResolver",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.springframework.web.server.i18n.LocaleContextResolver",
  "allPublicMethods":true
},
{
  "name":"reactor.adapter.JdkFlowAdapter",
  "methods":[
    {"name":"flowPublisherToFlux","parameterTypes":["java.util.concurrent.Flow$Publisher"] },
    {"name":"publisherToFlowPublisher","parameterTypes":["org.reactivestreams.Publisher"] }
  ]
},
{
  "name":"reactor.core.CorePublisher",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"reactor.core.CoreSubscriber",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"reactor.core.Disposable",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"reactor.core.Scannable",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"reactor.core.publisher.ContextHolder",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"reactor.core.publisher.Flux",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"all","parameterTypes":["java.util.function.Predicate"] },
    {"name":"any","parameterTypes":["java.util.function.Predicate"] },
    {"name":"as","parameterTypes":["java.util.function.Function"] },
    {"name":"blockFirst","parameterTypes":[] },
    {"name":"blockFirst","parameterTypes":["java.time.Duration"] },
    {"name":"blockLast","parameterTypes":[] },
    {"name":"blockLast","parameterTypes":["java.time.Duration"] },
    {"name":"buffer","parameterTypes":[] },
    {"name":"buffer","parameterTypes":["int"] },
    {"name":"buffer","parameterTypes":["int","int"] },
    {"name":"buffer","parameterTypes":["int","int","java.util.function.Supplier"] },
    {"name":"buffer","parameterTypes":["int","java.util.function.Supplier"] },
    {"name":"buffer","parameterTypes":["java.time.Duration"] },
    {"name":"buffer","parameterTypes":["java.time.Duration","java.time.Duration"] },
    {"name":"buffer","parameterTypes":["java.time.Duration","java.time.Duration","reactor.core.scheduler.Scheduler"] },
    {"name":"buffer","parameterTypes":["java.time.Duration","reactor.core.scheduler.Scheduler"] },
    {"name":"buffer","parameterTypes":["org.reactivestreams.Publisher"] },
    {"name":"buffer","parameterTypes":["org.reactivestreams.Publisher","java.util.function.Supplier"] },
    {"name":"bufferTimeout","parameterTypes":["int","java.time.Duration"] },
    {"name":"bufferTimeout","parameterTypes":["int","java.time.Duration","java.util.function.Supplier"] },
    {"name":"bufferTimeout","parameterTypes":["int","java.time.Duration","reactor.core.scheduler.Scheduler"] },
    {"name":"bufferTimeout","parameterTypes":["int","java.time.Duration","reactor.core.scheduler.Scheduler","java.util.function.Supplier"] },
    {"name":"bufferUntil","parameterTypes":["java.util.function.Predicate"] },
    {"name":"bufferUntil","parameterTypes":["java.util.function.Predicate","boolean"] },
    {"name":"bufferUntilChanged","parameterTypes":[] },
    {"name":"bufferUntilChanged","parameterTypes":["java.util.function.Function"] },
    {"name":"bufferUntilChanged","parameterTypes":["java.util.function.Function","java.util.function.BiPredicate"] },
    {"name":"bufferWhen","parameterTypes":["org.reactivestreams.Publisher","java.util.function.Function"] },
    {"name":"bufferWhen","parameterTypes":["org.reactivestreams.Publisher","java.util.function.Function","java.util.function.Supplier"] },
    {"name":"bufferWhile","parameterTypes":["java.util.function.Predicate"] },
    {"name":"cache","parameterTypes":[] },
    {"name":"cache","parameterTypes":["int"] },
    {"name":"cache","parameterTypes":["int","java.time.Duration"] },
    {"name":"cache","parameterTypes":["int","java.time.Duration","reactor.core.scheduler.Scheduler"] },
    {"name":"cache","parameterTypes":["java.time.Duration"] },
    {"name":"cache","parameterTypes":["java.time.Duration","reactor.core.scheduler.Scheduler"] },
    {"name":"cancelOn","parameterTypes":["reactor.core.scheduler.Scheduler"] },
    {"name":"cast","parameterTypes":["java.lang.Class"] },
    {"name":"checkpoint","parameterTypes":[] },
    {"name":"checkpoint","parameterTypes":["java.lang.String"] },
    {"name":"checkpoint","parameterTypes":["java.lang.String","boolean"] },
    {"name":"collect","parameterTypes":["java.util.function.Supplier","java.util.function.BiConsumer"] },
    {"name":"collect","parameterTypes":["java.util.stream.Collector"] },
    {"name":"collectList","parameterTypes":[] },
    {"name":"collectMap","parameterTypes":["java.util.function.Function"] },
    {"name":"collectMap","parameterTypes":["java.util.function.Function","java.util.function.Function"] },
    {"name":"collectMap","parameterTypes":["java.util.function.Function","java.util.function.Function","java.util.function.Supplier"] },
    {"name":"collectMultimap","parameterTypes":["java.util.function.Function"] },
    {"name":"collectMultimap","parameterTypes":["java.util.function.Function","java.util.function.Function"] },
    {"name":"collectMultimap","parameterTypes":["java.util.function.Function","java.util.function.Function","java.util.function.Supplier"] },
    {"name":"collectSortedList","parameterTypes":[] },
    {"name":"collectSortedList","parameterTypes":["java.util.Comparator"] },
    {"name":"combineLatest","parameterTypes":["java.lang.Iterable","int","java.util.function.Function"] },
    {"name":"combineLatest","parameterTypes":["java.lang.Iterable","java.util.function.Function"] },
    {"name":"combineLatest","parameterTypes":["java.util.function.Function","int","org.reactivestreams.Publisher[]"] },
    {"name":"combineLatest","parameterTypes":["java.util.function.Function","org.reactivestreams.Publisher[]"] },
    {"name":"combineLatest","parameterTypes":["org.reactivestreams.Publisher","org.reactivestreams.Publisher","java.util.function.BiFunction"] },
    {"name":"combineLatest","parameterTypes":["org.reactivestreams.Publisher","org.reactivestreams.Publisher","org.reactivestreams.Publisher","java.util.function.Function"] },
    {"name":"combineLatest","parameterTypes":["org.reactivestreams.Publisher","org.reactivestreams.Publisher","org.reactivestreams.Publisher","org.reactivestreams.Publisher","java.util.function.Function"] },
    {"name":"combineLatest","parameterTypes":["org.reactivestreams.Publisher","org.reactivestreams.Publisher","org.reactivestreams.Publisher","org.reactivestreams.Publisher","org.reactivestreams.Publisher","java.util.function.Function"] },
    {"name":"combineLatest","parameterTypes":["org.reactivestreams.Publisher","org.reactivestreams.Publisher","org.reactivestreams.Publisher","org.reactivestreams.Publisher","org.reactivestreams.Publisher","org.reactivestreams.Publisher","java.util.function.Function"] },
    {"name":"concat","parameterTypes":["java.lang.Iterable"] },
    {"name":"concat","parameterTypes":["org.reactivestreams.Publisher"] },
    {"name":"concat","parameterTypes":["org.reactivestreams.Publisher","int"] },
    {"name":"concat","parameterTypes":["org.reactivestreams.Publisher[]"] },
    {"name":"concatDelayError","parameterTypes":["org.reactivestreams.Publisher"] },
    {"name":"concatDelayError","parameterTypes":["org.reactivestreams.Publisher","int"] },
    {"name":"concatDelayError","parameterTypes":["org.reactivestreams.Publisher","boolean","int"] },
    {"name":"concatDelayError","parameterTypes":["org.reactivestreams.Publisher[]"] },
    {"name":"concatMap","parameterTypes":["java.util.function.Function"] },
    {"name":"concatMap","parameterTypes":["java.util.function.Function","int"] },
    {"name":"concatMapDelayError","parameterTypes":["java.util.function.Function"] },
    {"name":"concatMapDelayError","parameterTypes":["java.util.function.Function","int"] },
    {"name":"concatMapDelayError","parameterTypes":["java.util.function.Function","boolean","int"] },
    {"name":"concatMapIterable","parameterTypes":["java.util.function.Function"] },
    {"name":"concatMapIterable","parameterTypes":["java.util.function.Function","int"] },
    {"name":"concatWith","parameterTypes":["org.reactivestreams.Publisher"] },
    {"name":"concatWithValues","parameterTypes":["java.lang.Object[]"] },
    {"name":"contextWrite","parameterTypes":["java.util.function.Function"] },
    {"name":"contextWrite","parameterTypes":["reactor.util.context.ContextView"] },
    {"name":"count","parameterTypes":[] },
    {"name":"create","parameterTypes":["java.util.function.Consumer"] },
    {"name":"create","parameterTypes":["java.util.function.Consumer","reactor.core.publisher.FluxSink$OverflowStrategy"] },
    {"name":"defaultIfEmpty","parameterTypes":["java.lang.Object"] },
    {"name":"defer","parameterTypes":["java.util.function.Supplier"] },
    {"name":"deferContextual","parameterTypes":["java.util.function.Function"] },
    {"name":"deferWithContext","parameterTypes":["java.util.function.Function"] },
    {"name":"delayElements","parameterTypes":["java.time.Duration"] },
    {"name":"delayElements","parameterTypes":["java.time.Duration","reactor.core.scheduler.Scheduler"] },
    {"name":"delaySequence","parameterTypes":["java.time.Duration"] },
    {"name":"delaySequence","parameterTypes":["java.time.Duration","reactor.core.scheduler.Scheduler"] },
    {"name":"delaySubscription","parameterTypes":["java.time.Duration"] },
    {"name":"delaySubscription","parameterTypes":["java.time.Duration","reactor.core.scheduler.Scheduler"] },
    {"name":"delaySubscription","parameterTypes":["org.reactivestreams.Publisher"] },
    {"name":"delayUntil","parameterTypes":["java.util.function.Function"] },
    {"name":"dematerialize","parameterTypes":[] },
    {"name":"distinct","parameterTypes":[] },
    {"name":"distinct","parameterTypes":["java.util.function.Function"] },
    {"name":"distinct","parameterTypes":["java.util.function.Function","java.util.function.Supplier"] },
    {"name":"distinct","parameterTypes":["java.util.function.Function","java.util.function.Supplier","java.util.function.BiPredicate","java.util.function.Consumer"] },
    {"name":"distinctUntilChanged","parameterTypes":[] },
    {"name":"distinctUntilChanged","parameterTypes":["java.util.function.Function"] },
    {"name":"distinctUntilChanged","parameterTypes":["java.util.function.Function","java.util.function.BiPredicate"] },
    {"name":"doAfterTerminate","parameterTypes":["java.lang.Runnable"] },
    {"name":"doFinally","parameterTypes":["java.util.function.Consumer"] },
    {"name":"doFirst","parameterTypes":["java.lang.Runnable"] },
    {"name":"doOnCancel","parameterTypes":["java.lang.Runnable"] },
    {"name":"doOnComplete","parameterTypes":["java.lang.Runnable"] },
    {"name":"doOnDiscard","parameterTypes":["java.lang.Class","java.util.function.Consumer"] },
    {"name":"doOnEach","parameterTypes":["java.util.function.Consumer"] },
    {"name":"doOnError","parameterTypes":["java.lang.Class","java.util.function.Consumer"] },
    {"name":"doOnError","parameterTypes":["java.util.function.Consumer"] },
    {"name":"doOnError","parameterTypes":["java.util.function.Predicate","java.util.function.Consumer"] },
    {"name":"doOnNext","parameterTypes":["java.util.function.Consumer"] },
    {"name":"doOnRequest","parameterTypes":["java.util.function.LongConsumer"] },
    {"name":"doOnSubscribe","parameterTypes":["java.util.function.Consumer"] },
    {"name":"doOnTerminate","parameterTypes":["java.lang.Runnable"] },
    {"name":"elapsed","parameterTypes":[] },
    {"name":"elapsed","parameterTypes":["reactor.core.scheduler.Scheduler"] },
    {"name":"elementAt","parameterTypes":["int"] },
    {"name":"elementAt","parameterTypes":["int","java.lang.Object"] },
    {"name":"empty","parameterTypes":[] },
    {"name":"error","parameterTypes":["java.lang.Throwable"] },
    {"name":"error","parameterTypes":["java.lang.Throwable","boolean"] },
    {"name":"error","parameterTypes":["java.util.function.Supplier"] },
    {"name":"expand","parameterTypes":["java.util.function.Function"] },
    {"name":"expand","parameterTypes":["java.util.function.Function","int"] },
    {"name":"expandDeep","parameterTypes":["java.util.function.Function"] },
    {"name":"expandDeep","parameterTypes":["java.util.function.Function","int"] },
    {"name":"filter","parameterTypes":["java.util.function.Predicate"] },
    {"name":"filterWhen","parameterTypes":["java.util.function.Function"] },
    {"name":"filterWhen","parameterTypes":["java.util.function.Function","int"] },
    {"name":"first","parameterTypes":["java.lang.Iterable"] },
    {"name":"first","parameterTypes":["org.reactivestreams.Publisher[]"] },
    {"name":"firstWithSignal","parameterTypes":["java.lang.Iterable"] },
    {"name":"firstWithSignal","parameterTypes":["org.reactivestreams.Publisher[]"] },
    {"name":"firstWithValue","parameterTypes":["java.lang.Iterable"] },
    {"name":"firstWithValue","parameterTypes":["org.reactivestreams.Publisher","org.reactivestreams.Publisher[]"] },
    {"name":"flatMap","parameterTypes":["java.util.function.Function"] },
    {"name":"flatMap","parameterTypes":["java.util.function.Function","int"] },
    {"name":"flatMap","parameterTypes":["java.util.function.Function","int","int"] },
    {"name":"flatMap","parameterTypes":["java.util.function.Function","java.util.function.Function","java.util.function.Supplier"] },
    {"name":"flatMapDelayError","parameterTypes":["java.util.function.Function","int","int"] },
    {"name":"flatMapIterable","parameterTypes":["java.util.function.Function"] },
    {"name":"flatMapIterable","parameterTypes":["java.util.function.Function","int"] },
    {"name":"flatMapSequential","parameterTypes":["java.util.function.Function"] },
    {"name":"flatMapSequential","parameterTypes":["java.util.function.Function","int"] },
    {"name":"flatMapSequential","parameterTypes":["java.util.function.Function","int","int"] },
    {"name":"flatMapSequentialDelayError","parameterTypes":["java.util.function.Function","int","int"] },
    {"name":"from","parameterTypes":["org.reactivestreams.Publisher"] },
    {"name":"fromArray","parameterTypes":["java.lang.Object[]"] },
    {"name":"fromIterable","parameterTypes":["java.lang.Iterable"] },
    {"name":"fromStream","parameterTypes":["java.util.function.Supplier"] },
    {"name":"fromStream","parameterTypes":["java.util.stream.Stream"] },
    {"name":"generate","parameterTypes":["java.util.concurrent.Callable","java.util.function.BiFunction"] },
    {"name":"generate","parameterTypes":["java.util.concurrent.Callable","java.util.function.BiFunction","java.util.function.Consumer"] },
    {"name":"generate","parameterTypes":["java.util.function.Consumer"] },
    {"name":"getPrefetch","parameterTypes":[] },
    {"name":"groupBy","parameterTypes":["java.util.function.Function"] },
    {"name":"groupBy","parameterTypes":["java.util.function.Function","int"] },
    {"name":"groupBy","parameterTypes":["java.util.function.Function","java.util.function.Function"] },
    {"name":"groupBy","parameterTypes":["java.util.function.Function","java.util.function.Function","int"] },
    {"name":"groupJoin","parameterTypes":["org.reactivestreams.Publisher","java.util.function.Function","java.util.function.Function","java.util.function.BiFunction"] },
    {"name":"handle","parameterTypes":["java.util.function.BiConsumer"] },
    {"name":"hasElement","parameterTypes":["java.lang.Object"] },
    {"name":"hasElements","parameterTypes":[] },
    {"name":"hide","parameterTypes":[] },
    {"name":"ignoreElements","parameterTypes":[] },
    {"name":"index","parameterTypes":[] },
    {"name":"index","parameterTypes":["java.util.function.BiFunction"] },
    {"name":"interval","parameterTypes":["java.time.Duration"] },
    {"name":"interval","parameterTypes":["java.time.Duration","java.time.Duration"] },
    {"name":"interval","parameterTypes":["java.time.Duration","java.time.Duration","reactor.core.scheduler.Scheduler"] },
    {"name":"interval","parameterTypes":["java.time.Duration","reactor.core.scheduler.Scheduler"] },
    {"name":"join","parameterTypes":["org.reactivestreams.Publisher","java.util.function.Function","java.util.function.Function","java.util.function.BiFunction"] },
    {"name":"just","parameterTypes":["java.lang.Object"] },
    {"name":"just","parameterTypes":["java.lang.Object[]"] },
    {"name":"last","parameterTypes":[] },
    {"name":"last","parameterTypes":["java.lang.Object"] },
    {"name":"limitRate","parameterTypes":["int"] },
    {"name":"limitRate","parameterTypes":["int","int"] },
    {"name":"limitRequest","parameterTypes":["long"] },
    {"name":"log","parameterTypes":[] },
    {"name":"log","parameterTypes":["java.lang.String"] },
    {"name":"log","parameterTypes":["java.lang.String","java.util.logging.Level","boolean","reactor.core.publisher.SignalType[]"] },
    {"name":"log","parameterTypes":["java.lang.String","java.util.logging.Level","reactor.core.publisher.SignalType[]"] },
    {"name":"log","parameterTypes":["reactor.util.Logger"] },
    {"name":"log","parameterTypes":["reactor.util.Logger","java.util.logging.Level","boolean","reactor.core.publisher.SignalType[]"] },
    {"name":"map","parameterTypes":["java.util.function.Function"] },
    {"name":"materialize","parameterTypes":[] },
    {"name":"merge","parameterTypes":["int","org.reactivestreams.Publisher[]"] },
    {"name":"merge","parameterTypes":["java.lang.Iterable"] },
    {"name":"merge","parameterTypes":["org.reactivestreams.Publisher"] },
    {"name":"merge","parameterTypes":["org.reactivestreams.Publisher","int"] },
    {"name":"merge","parameterTypes":["org.reactivestreams.Publisher","int","int"] },
    {"name":"merge","parameterTypes":["org.reactivestreams.Publisher[]"] },
    {"name":"mergeDelayError","parameterTypes":["int","org.reactivestreams.Publisher[]"] },
    {"name":"mergeOrdered","parameterTypes":["int","java.util.Comparator","org.reactivestreams.Publisher[]"] },
    {"name":"mergeOrdered","parameterTypes":["java.util.Comparator","org.reactivestreams.Publisher[]"] },
    {"name":"mergeOrdered","parameterTypes":["org.reactivestreams.Publisher[]"] },
    {"name":"mergeOrderedWith","parameterTypes":["org.reactivestreams.Publisher","java.util.Comparator"] },
    {"name":"mergeSequential","parameterTypes":["int","org.reactivestreams.Publisher[]"] },
    {"name":"mergeSequential","parameterTypes":["java.lang.Iterable"] },
    {"name":"mergeSequential","parameterTypes":["java.lang.Iterable","int","int"] },
    {"name":"mergeSequential","parameterTypes":["org.reactivestreams.Publisher"] },
    {"name":"mergeSequential","parameterTypes":["org.reactivestreams.Publisher","int","int"] },
    {"name":"mergeSequential","parameterTypes":["org.reactivestreams.Publisher[]"] },
    {"name":"mergeSequentialDelayError","parameterTypes":["int","org.reactivestreams.Publisher[]"] },
    {"name":"mergeSequentialDelayError","parameterTypes":["java.lang.Iterable","int","int"] },
    {"name":"mergeSequentialDelayError","parameterTypes":["org.reactivestreams.Publisher","int","int"] },
    {"name":"mergeWith","parameterTypes":["org.reactivestreams.Publisher"] },
    {"name":"metrics","parameterTypes":[] },
    {"name":"name","parameterTypes":["java.lang.String"] },
    {"name":"never","parameterTypes":[] },
    {"name":"next","parameterTypes":[] },
    {"name":"ofType","parameterTypes":["java.lang.Class"] },
    {"name":"onBackpressureBuffer","parameterTypes":[] },
    {"name":"onBackpressureBuffer","parameterTypes":["int"] },
    {"name":"onBackpressureBuffer","parameterTypes":["int","java.util.function.Consumer"] },
    {"name":"onBackpressureBuffer","parameterTypes":["int","java.util.function.Consumer","reactor.core.publisher.BufferOverflowStrategy"] },
    {"name":"onBackpressureBuffer","parameterTypes":["int","reactor.core.publisher.BufferOverflowStrategy"] },
    {"name":"onBackpressureBuffer","parameterTypes":["java.time.Duration","int","java.util.function.Consumer"] },
    {"name":"onBackpressureBuffer","parameterTypes":["java.time.Duration","int","java.util.function.Consumer","reactor.core.scheduler.Scheduler"] },
    {"name":"onBackpressureDrop","parameterTypes":[] },
    {"name":"onBackpressureDrop","parameterTypes":["java.util.function.Consumer"] },
    {"name":"onBackpressureError","parameterTypes":[] },
    {"name":"onBackpressureLatest","parameterTypes":[] },
    {"name":"onErrorContinue","parameterTypes":["java.lang.Class","java.util.function.BiConsumer"] },
    {"name":"onErrorContinue","parameterTypes":["java.util.function.BiConsumer"] },
    {"name":"onErrorContinue","parameterTypes":["java.util.function.Predicate","java.util.function.BiConsumer"] },
    {"name":"onErrorMap","parameterTypes":["java.lang.Class","java.util.function.Function"] },
    {"name":"onErrorMap","parameterTypes":["java.util.function.Function"] },
    {"name":"onErrorMap","parameterTypes":["java.util.function.Predicate","java.util.function.Function"] },
    {"name":"onErrorResume","parameterTypes":["java.lang.Class","java.util.function.Function"] },
    {"name":"onErrorResume","parameterTypes":["java.util.function.Function"] },
    {"name":"onErrorResume","parameterTypes":["java.util.function.Predicate","java.util.function.Function"] },
    {"name":"onErrorReturn","parameterTypes":["java.lang.Class","java.lang.Object"] },
    {"name":"onErrorReturn","parameterTypes":["java.lang.Object"] },
    {"name":"onErrorReturn","parameterTypes":["java.util.function.Predicate","java.lang.Object"] },
    {"name":"onErrorStop","parameterTypes":[] },
    {"name":"onTerminateDetach","parameterTypes":[] },
    {"name":"or","parameterTypes":["org.reactivestreams.Publisher"] },
    {"name":"parallel","parameterTypes":[] },
    {"name":"parallel","parameterTypes":["int"] },
    {"name":"parallel","parameterTypes":["int","int"] },
    {"name":"publish","parameterTypes":[] },
    {"name":"publish","parameterTypes":["int"] },
    {"name":"publish","parameterTypes":["java.util.function.Function"] },
    {"name":"publish","parameterTypes":["java.util.function.Function","int"] },
    {"name":"publishNext","parameterTypes":[] },
    {"name":"publishOn","parameterTypes":["reactor.core.scheduler.Scheduler"] },
    {"name":"publishOn","parameterTypes":["reactor.core.scheduler.Scheduler","int"] },
    {"name":"publishOn","parameterTypes":["reactor.core.scheduler.Scheduler","boolean","int"] },
    {"name":"push","parameterTypes":["java.util.function.Consumer"] },
    {"name":"push","parameterTypes":["java.util.function.Consumer","reactor.core.publisher.FluxSink$OverflowStrategy"] },
    {"name":"range","parameterTypes":["int","int"] },
    {"name":"reduce","parameterTypes":["java.lang.Object","java.util.function.BiFunction"] },
    {"name":"reduce","parameterTypes":["java.util.function.BiFunction"] },
    {"name":"reduceWith","parameterTypes":["java.util.function.Supplier","java.util.function.BiFunction"] },
    {"name":"repeat","parameterTypes":[] },
    {"name":"repeat","parameterTypes":["long"] },
    {"name":"repeat","parameterTypes":["long","java.util.function.BooleanSupplier"] },
    {"name":"repeat","parameterTypes":["java.util.function.BooleanSupplier"] },
    {"name":"repeatWhen","parameterTypes":["java.util.function.Function"] },
    {"name":"replay","parameterTypes":[] },
    {"name":"replay","parameterTypes":["int"] },
    {"name":"replay","parameterTypes":["int","java.time.Duration"] },
    {"name":"replay","parameterTypes":["int","java.time.Duration","reactor.core.scheduler.Scheduler"] },
    {"name":"replay","parameterTypes":["java.time.Duration"] },
    {"name":"replay","parameterTypes":["java.time.Duration","reactor.core.scheduler.Scheduler"] },
    {"name":"retry","parameterTypes":[] },
    {"name":"retry","parameterTypes":["long"] },
    {"name":"retryWhen","parameterTypes":["reactor.util.retry.Retry"] },
    {"name":"sample","parameterTypes":["java.time.Duration"] },
    {"name":"sample","parameterTypes":["org.reactivestreams.Publisher"] },
    {"name":"sampleFirst","parameterTypes":["java.time.Duration"] },
    {"name":"sampleFirst","parameterTypes":["java.util.function.Function"] },
    {"name":"sampleTimeout","parameterTypes":["java.util.function.Function"] },
    {"name":"sampleTimeout","parameterTypes":["java.util.function.Function","int"] },
    {"name":"scan","parameterTypes":["java.lang.Object","java.util.function.BiFunction"] },
    {"name":"scan","parameterTypes":["java.util.function.BiFunction"] },
    {"name":"scanWith","parameterTypes":["java.util.function.Supplier","java.util.function.BiFunction"] },
    {"name":"share","parameterTypes":[] },
    {"name":"shareNext","parameterTypes":[] },
    {"name":"single","parameterTypes":[] },
    {"name":"single","parameterTypes":["java.lang.Object"] },
    {"name":"singleOrEmpty","parameterTypes":[] },
    {"name":"skip","parameterTypes":["long"] },
    {"name":"skip","parameterTypes":["java.time.Duration"] },
    {"name":"skip","parameterTypes":["java.time.Duration","reactor.core.scheduler.Scheduler"] },
    {"name":"skipLast","parameterTypes":["int"] },
    {"name":"skipUntil","parameterTypes":["java.util.function.Predicate"] },
    {"name":"skipUntilOther","parameterTypes":["org.reactivestreams.Publisher"] },
    {"name":"skipWhile","parameterTypes":["java.util.function.Predicate"] },
    {"name":"sort","parameterTypes":[] },
    {"name":"sort","parameterTypes":["java.util.Comparator"] },
    {"name":"startWith","parameterTypes":["java.lang.Iterable"] },
    {"name":"startWith","parameterTypes":["org.reactivestreams.Publisher"] },
    {"name":"startWith","parameterTypes":["java.lang.Object[]"] },
    {"name":"subscribe","parameterTypes":[] },
    {"name":"subscribe","parameterTypes":["java.util.function.Consumer"] },
    {"name":"subscribe","parameterTypes":["java.util.function.Consumer","java.util.function.Consumer"] },
    {"name":"subscribe","parameterTypes":["java.util.function.Consumer","java.util.function.Consumer","java.lang.Runnable"] },
    {"name":"subscribe","parameterTypes":["java.util.function.Consumer","java.util.function.Consumer","java.lang.Runnable","java.util.function.Consumer"] },
    {"name":"subscribe","parameterTypes":["java.util.function.Consumer","java.util.function.Consumer","java.lang.Runnable","reactor.util.context.Context"] },
    {"name":"subscribe","parameterTypes":["org.reactivestreams.Subscriber"] },
    {"name":"subscribeOn","parameterTypes":["reactor.core.scheduler.Scheduler"] },
    {"name":"subscribeOn","parameterTypes":["reactor.core.scheduler.Scheduler","boolean"] },
    {"name":"subscribeWith","parameterTypes":["org.reactivestreams.Subscriber"] },
    {"name":"subscriberContext","parameterTypes":["java.util.function.Function"] },
    {"name":"subscriberContext","parameterTypes":["reactor.util.context.Context"] },
    {"name":"switchIfEmpty","parameterTypes":["org.reactivestreams.Publisher"] },
    {"name":"switchMap","parameterTypes":["java.util.function.Function"] },
    {"name":"switchMap","parameterTypes":["java.util.function.Function","int"] },
    {"name":"switchOnFirst","parameterTypes":["java.util.function.BiFunction"] },
    {"name":"switchOnFirst","parameterTypes":["java.util.function.BiFunction","boolean"] },
    {"name":"switchOnNext","parameterTypes":["org.reactivestreams.Publisher"] },
    {"name":"switchOnNext","parameterTypes":["org.reactivestreams.Publisher","int"] },
    {"name":"tag","parameterTypes":["java.lang.String","java.lang.String"] },
    {"name":"take","parameterTypes":["long"] },
    {"name":"take","parameterTypes":["java.time.Duration"] },
    {"name":"take","parameterTypes":["java.time.Duration","reactor.core.scheduler.Scheduler"] },
    {"name":"takeLast","parameterTypes":["int"] },
    {"name":"takeUntil","parameterTypes":["java.util.function.Predicate"] },
    {"name":"takeUntilOther","parameterTypes":["org.reactivestreams.Publisher"] },
    {"name":"takeWhile","parameterTypes":["java.util.function.Predicate"] },
    {"name":"then","parameterTypes":[] },
    {"name":"then","parameterTypes":["reactor.core.publisher.Mono"] },
    {"name":"thenEmpty","parameterTypes":["org.reactivestreams.Publisher"] },
    {"name":"thenMany","parameterTypes":["org.reactivestreams.Publisher"] },
    {"name":"timed","parameterTypes":[] },
    {"name":"timed","parameterTypes":["reactor.core.scheduler.Scheduler"] },
    {"name":"timeout","parameterTypes":["java.time.Duration"] },
    {"name":"timeout","parameterTypes":["java.time.Duration","org.reactivestreams.Publisher"] },
    {"name":"timeout","parameterTypes":["java.time.Duration","org.reactivestreams.Publisher","reactor.core.scheduler.Scheduler"] },
    {"name":"timeout","parameterTypes":["java.time.Duration","reactor.core.scheduler.Scheduler"] },
    {"name":"timeout","parameterTypes":["org.reactivestreams.Publisher"] },
    {"name":"timeout","parameterTypes":["org.reactivestreams.Publisher","java.util.function.Function"] },
    {"name":"timeout","parameterTypes":["org.reactivestreams.Publisher","java.util.function.Function","org.reactivestreams.Publisher"] },
    {"name":"timestamp","parameterTypes":[] },
    {"name":"timestamp","parameterTypes":["reactor.core.scheduler.Scheduler"] },
    {"name":"toIterable","parameterTypes":[] },
    {"name":"toIterable","parameterTypes":["int"] },
    {"name":"toIterable","parameterTypes":["int","java.util.function.Supplier"] },
    {"name":"toStream","parameterTypes":[] },
    {"name":"toStream","parameterTypes":["int"] },
    {"name":"transform","parameterTypes":["java.util.function.Function"] },
    {"name":"transformDeferred","parameterTypes":["java.util.function.Function"] },
    {"name":"transformDeferredContextual","parameterTypes":["java.util.function.BiFunction"] },
    {"name":"using","parameterTypes":["java.util.concurrent.Callable","java.util.function.Function","java.util.function.Consumer"] },
    {"name":"using","parameterTypes":["java.util.concurrent.Callable","java.util.function.Function","java.util.function.Consumer","boolean"] },
    {"name":"usingWhen","parameterTypes":["org.reactivestreams.Publisher","java.util.function.Function","java.util.function.Function"] },
    {"name":"usingWhen","parameterTypes":["org.reactivestreams.Publisher","java.util.function.Function","java.util.function.Function","java.util.function.BiFunction","java.util.function.Function"] },
    {"name":"window","parameterTypes":["int"] },
    {"name":"window","parameterTypes":["int","int"] },
    {"name":"window","parameterTypes":["java.time.Duration"] },
    {"name":"window","parameterTypes":["java.time.Duration","java.time.Duration"] },
    {"name":"window","parameterTypes":["java.time.Duration","java.time.Duration","reactor.core.scheduler.Scheduler"] },
    {"name":"window","parameterTypes":["java.time.Duration","reactor.core.scheduler.Scheduler"] },
    {"name":"window","parameterTypes":["org.reactivestreams.Publisher"] },
    {"name":"windowTimeout","parameterTypes":["int","java.time.Duration"] },
    {"name":"windowTimeout","parameterTypes":["int","java.time.Duration","reactor.core.scheduler.Scheduler"] },
    {"name":"windowUntil","parameterTypes":["java.util.function.Predicate"] },
    {"name":"windowUntil","parameterTypes":["java.util.function.Predicate","boolean"] },
    {"name":"windowUntil","parameterTypes":["java.util.function.Predicate","boolean","int"] },
    {"name":"windowUntilChanged","parameterTypes":[] },
    {"name":"windowUntilChanged","parameterTypes":["java.util.function.Function"] },
    {"name":"windowUntilChanged","parameterTypes":["java.util.function.Function","java.util.function.BiPredicate"] },
    {"name":"windowWhen","parameterTypes":["org.reactivestreams.Publisher","java.util.function.Function"] },
    {"name":"windowWhile","parameterTypes":["java.util.function.Predicate"] },
    {"name":"windowWhile","parameterTypes":["java.util.function.Predicate","int"] },
    {"name":"withLatestFrom","parameterTypes":["org.reactivestreams.Publisher","java.util.function.BiFunction"] },
    {"name":"zip","parameterTypes":["java.lang.Iterable","int","java.util.function.Function"] },
    {"name":"zip","parameterTypes":["java.lang.Iterable","java.util.function.Function"] },
    {"name":"zip","parameterTypes":["java.util.function.Function","int","org.reactivestreams.Publisher[]"] },
    {"name":"zip","parameterTypes":["java.util.function.Function","org.reactivestreams.Publisher[]"] },
    {"name":"zip","parameterTypes":["org.reactivestreams.Publisher","java.util.function.Function"] },
    {"name":"zip","parameterTypes":["org.reactivestreams.Publisher","org.reactivestreams.Publisher"] },
    {"name":"zip","parameterTypes":["org.reactivestreams.Publisher","org.reactivestreams.Publisher","java.util.function.BiFunction"] },
    {"name":"zip","parameterTypes":["org.reactivestreams.Publisher","org.reactivestreams.Publisher","org.reactivestreams.Publisher"] },
    {"name":"zip","parameterTypes":["org.reactivestreams.Publisher","org.reactivestreams.Publisher","org.reactivestreams.Publisher","org.reactivestreams.Publisher"] },
    {"name":"zip","parameterTypes":["org.reactivestreams.Publisher","org.reactivestreams.Publisher","org.reactivestreams.Publisher","org.reactivestreams.Publisher","org.reactivestreams.Publisher"] },
    {"name":"zip","parameterTypes":["org.reactivestreams.Publisher","org.reactivestreams.Publisher","org.reactivestreams.Publisher","org.reactivestreams.Publisher","org.reactivestreams.Publisher","org.reactivestreams.Publisher"] },
    {"name":"zip","parameterTypes":["org.reactivestreams.Publisher","org.reactivestreams.Publisher","org.reactivestreams.Publisher","org.reactivestreams.Publisher","org.reactivestreams.Publisher","org.reactivestreams.Publisher","org.reactivestreams.Publisher"] },
    {"name":"zip","parameterTypes":["org.reactivestreams.Publisher","org.reactivestreams.Publisher","org.reactivestreams.Publisher","org.reactivestreams.Publisher","org.reactivestreams.Publisher","org.reactivestreams.Publisher","org.reactivestreams.Publisher","org.reactivestreams.Publisher"] },
    {"name":"zipWith","parameterTypes":["org.reactivestreams.Publisher"] },
    {"name":"zipWith","parameterTypes":["org.reactivestreams.Publisher","int"] },
    {"name":"zipWith","parameterTypes":["org.reactivestreams.Publisher","int","java.util.function.BiFunction"] },
    {"name":"zipWith","parameterTypes":["org.reactivestreams.Publisher","java.util.function.BiFunction"] },
    {"name":"zipWithIterable","parameterTypes":["java.lang.Iterable"] },
    {"name":"zipWithIterable","parameterTypes":["java.lang.Iterable","java.util.function.BiFunction"] }
  ]
},
{
  "name":"reactor.core.publisher.FluxProcessor",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"currentContext","parameterTypes":[] },
    {"name":"dispose","parameterTypes":[] },
    {"name":"hasCompleted","parameterTypes":[] },
    {"name":"hasDownstreams","parameterTypes":[] },
    {"name":"hasError","parameterTypes":[] },
    {"name":"serialize","parameterTypes":[] },
    {"name":"sink","parameterTypes":[] },
    {"name":"sink","parameterTypes":["reactor.core.publisher.FluxSink$OverflowStrategy"] },
    {"name":"switchOnNext","parameterTypes":[] },
    {"name":"wrap","parameterTypes":["org.reactivestreams.Subscriber","org.reactivestreams.Publisher"] }
  ]
},
{
  "name":"reactor.extra.processor.EventLoopProcessor",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "methods":[
    {"name":"alive","parameterTypes":[] },
    {"name":"awaitAndShutdown","parameterTypes":[] },
    {"name":"awaitAndShutdown","parameterTypes":["long","java.util.concurrent.TimeUnit"] },
    {"name":"awaitAndShutdown","parameterTypes":["java.time.Duration"] },
    {"name":"forceShutdown","parameterTypes":[] },
    {"name":"getAvailableCapacity","parameterTypes":[] },
    {"name":"getBufferSize","parameterTypes":[] },
    {"name":"getError","parameterTypes":[] },
    {"name":"hashCode","parameterTypes":[] },
    {"name":"isTerminated","parameterTypes":[] },
    {"name":"onComplete","parameterTypes":[] },
    {"name":"onError","parameterTypes":["java.lang.Throwable"] },
    {"name":"onNext","parameterTypes":["java.lang.Object"] },
    {"name":"onSubscribe","parameterTypes":["org.reactivestreams.Subscription"] },
    {"name":"shutdown","parameterTypes":[] },
    {"name":"toString","parameterTypes":[] }
  ]
},
{
  "name":"reactor.extra.processor.TopicProcessor",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"reactor.extra.processor.Value",
  "fields":[{"name":"value", "allowUnsafeAccess":true}]
},
{
  "name":"reactor.netty.channel.ChannelOperationsHandler",
  "methods":[
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] },
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }
  ]
},
{
  "name":"reactor.netty.http.client.HttpClient"
},
{
  "name":"reactor.netty.http.server.HttpServer"
},
{
  "name":"reactor.netty.http.server.HttpServerResponse"
},
{
  "name":"reactor.netty.http.server.HttpTrafficHandler",
  "methods":[
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] },
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] },
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]
},
{
  "name":"reactor.netty.resources.DefaultPooledConnectionProvider$PooledConnectionAllocator$PooledConnectionInitializer"
},
{
  "name":"reactor.netty.transport.ServerTransport$Acceptor",
  "methods":[
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] },
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }
  ]
},
{
  "name":"reactor.netty.transport.ServerTransport$AcceptorInitializer"
},
{
  "name":"reactor.netty.transport.TransportConfig$TransportChannelInitializer"
},
{
  "name":"reactor.util.annotation.Nullable",
  "allDeclaredMethods":true
},
{
  "name":"sun.misc.Unsafe",
  "fields":[{"name":"theUnsafe"}],
  "methods":[
    {"name":"copyMemory","parameterTypes":["java.lang.Object","long","java.lang.Object","long","long"] },
    {"name":"getAndAddLong","parameterTypes":["java.lang.Object","long","long"] },
    {"name":"getAndSetObject","parameterTypes":["java.lang.Object","long","java.lang.Object"] },
    {"name":"invokeCleaner","parameterTypes":["java.nio.ByteBuffer"] }
  ]
},
{
  "name":"sun.nio.ch.SelectorImpl",
  "fields":[
    {"name":"publicSelectedKeys", "allowUnsafeAccess":true},
    {"name":"selectedKeys", "allowUnsafeAccess":true}
  ]
},
{
  "name":"sun.security.provider.NativePRNG",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
}
]
